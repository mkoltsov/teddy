"use strict";
(function () {

    angular.module("minimalg", ["ui.router",
        "ui.bootstrap",
        'restangular',
        'mg.places',
        'mg.faces',
        'mg.templates',
        'mg.common'
    ])

        .config(function ($stateProvider, $urlRouterProvider, $sceProvider, RestangularProvider) {
            RestangularProvider.setBaseUrl('/api/v1');

            $urlRouterProvider.otherwise("/main/places");
            $stateProvider
                .state("main", {
                    abtract: true,
                    url: "/main",
                    templateUrl: "app/main.html",
                    controller: 'MainCtrl'
                })
                .state("main.places", {
                    url: "/places",
                    templateUrl: "app/places/places.tpl.html",
                    controller: 'PlacesCtrl'})
                .state("main.faces", {
                    url: "/faces",
                    templateUrl: "app/faces/faces.tpl.html",
                    controller: 'FacesCtrl'});

        })

        .controller("MainCtrl", ['$rootScope', '$scope', '$log' , '$state', '$modal', 'Restangular', '$location',
            function ($rootScope, $scope, $log, $state, $modal, Restangular, $location) {
                $scope.test = 'pupa';
                $scope.navbarCollapsed = true;
                $scope.isActive = function (viewLocation) {
                    return viewLocation === $location.path();
                };



            }]
    );

    angular.module('mg.places', []);
    angular.module('mg.faces', []);
    angular.module('mg.common', []);
}());;"use strict";
angular.module('mg.common')
    .service('toasterService', function (toaster) {
        var messageCache = {error: null,
            success: null,
            warning: null};

        var notifyUser = function (text, it) {
            var notificationType = _.keys(messageCache)[it];
            function textHasChanged(text) {
                return JSON.stringify(text) !== JSON.stringify(messageCache[notificationType]);
            }

            function capitalize(string) {
                return string.charAt(0).toUpperCase() + string.slice(1);
            }

            function notify(text) {
                messageCache[notificationType] = text;
                toaster.pop(notificationType, capitalize(notificationType), text);
            }

            if (textHasChanged(text)) {
                notify(text);
            }

        };

        this.error = function (text) {
            notifyUser(text, 0);
        };

        this.success = function (text) {
            notifyUser(text, 1);
        };

        this.warning = function (text) {
            notifyUser(text, 2);
        };
    });;"use strict";
angular.module('mg.faces')
    .controller('FacesCtrl', ['$rootScope', '$scope',

        function ($rootScope, $scope) {
            $scope.test='Pupa';
        }
    ]);;"use strict";
angular.module('mg.places')
    .controller('PlacesCtrl', ['$rootScope', '$scope','Restangular',

        function ($rootScope, $scope, Restangular) {
            $scope.model = {selected:'Moscow',places:[]};

            $scope.add = function(val){
                Restangular.one("city", val).get().then(function(data){
                    $scope.model.places.push({address:data.address, icon:data, temp:data.temp});
                    $scope.model.selected='';
                });
            };
        }
    ]);